# .github/workflows/ci-cd.yml

name: CI, Quality Scan & CD

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  build_and_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install Node.js dependencies
        run: npm install
      - name: Build and analyze with Maven & SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JamesWuVip_wanliRepo
      - name: Start backend for acceptance tests
        run: |
          cd backend
          SPRING_PROFILES_ACTIVE=test nohup java -jar ../target/wanli-academy-backend-0.0.1-SNAPSHOT.jar > backend.log 2>&1 &
          echo $! > backend.pid
          sleep 30
          # 检查后端是否启动成功
          if ! curl -f http://localhost:8080/actuator/health; then
            echo "Backend failed to start"
            cat backend.log
            exit 1
          fi
      - name: Run acceptance tests
        run: |
          node acceptance-test.js
          # 停止后端服务
          if [ -f backend/backend.pid ]; then
            kill $(cat backend/backend.pid) || true
            rm backend/backend.pid
          fi

  deploy:
    needs: build_and_scan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Deploy to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          # 安装 Railway CLI
          npm install -g @railway/cli
          # 部署到 Railway
          railway deploy --service ${{ secrets.RAILWAY_SERVICE_ID }}
